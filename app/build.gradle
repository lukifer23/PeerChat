plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'com.google.devtools.ksp'
}

android {
    namespace 'com.peerchat.app'
    compileSdk 34

    defaultConfig {
        applicationId 'com.peerchat.app'
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName '1.0.0'
        ndk {
            abiFilters 'arm64-v8a'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
            // Build optimization flags
            buildConfigField "boolean", "BUILD_OPTIMIZED", "true"
            // APK size optimizations
            debuggable false
            jniDebuggable false
            // Enable split APKs for different ABIs (though we only target arm64-v8a)
            ndk {
                debugSymbolLevel = "NONE"
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            // Enable build optimizations even in debug for faster development
            buildConfigField "boolean", "BUILD_OPTIMIZED", "true"
        }
    }

    // Dexing optimization - removed deprecated dexOptions for AGP 8.6.1

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }

    packagingOptions {
        resources {
            excludes += [
                '/META-INF/{AL2.0,LGPL2.1}',
                '/META-INF/LICENSE*',
                '/META-INF/DEPENDENCIES',
                '/META-INF/NOTICE',
                '/META-INF/*.kotlin_module',
                '**/attach_hotspot_windows.dll',
                'META-INF/licenses/**',
                'META-INF/AL2.0',
                'META-INF/LGPL2.1'
            ]
        }
        jniLibs {
            // Optimize native library packaging
            useLegacyPackaging = false
        }
    }

    testBuildType "debug"

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation platform(libs.compose.bom)
    implementation libs.androidx.core.ktx
    implementation libs.androidx.activity.compose
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.navigation.compose
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.material3
    implementation libs.material

    implementation libs.hilt.android
    ksp libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.compose

    implementation libs.coroutines.android
    implementation libs.androidx.work.runtime
    implementation libs.androidx.lifecycle.livedata.ktx

    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler

    implementation libs.pdfbox.android
    implementation libs.mlkit.text.recognition

    implementation libs.androidx.security.crypto

    implementation libs.compose.markdown

    implementation project(':engine')
    implementation project(':data')
    implementation project(':docs')
    implementation project(':rag')
    implementation project(':templates')
    testImplementation libs.junit
    testImplementation libs.coroutines.test
    testImplementation libs.mockk
    testImplementation libs.json
    testImplementation project(':engine')
    testImplementation libs.robolectric
    testImplementation libs.androidx.test.core
    testImplementation libs.androidx.test.ext.junit
}

tasks.withType(Test).configureEach {
    if (name.contains("ReleaseUnitTest")) {
        enabled = false
    }
}

configurations.all {
    resolutionStrategy.force 'com.squareup:javapoet:1.13.0'
}

hilt {
    enableAggregatingTask = false
}
