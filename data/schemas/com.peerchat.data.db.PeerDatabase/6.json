{
  "formatVersion": 1,
  "database": {
    "version": 6,
    "identityHash": "fc37927f2ffd975d9cd96dd465251b05",
    "entities": [
      {
        "tableName": "folders",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "chats",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `folderId` INTEGER, `title` TEXT NOT NULL, `systemPrompt` TEXT NOT NULL, `modelId` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `settingsJson` TEXT NOT NULL, FOREIGN KEY(`folderId`) REFERENCES `folders`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "folderId",
            "columnName": "folderId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "systemPrompt",
            "columnName": "systemPrompt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "modelId",
            "columnName": "modelId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "settingsJson",
            "columnName": "settingsJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_chats_folderId",
            "unique": false,
            "columnNames": [
              "folderId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chats_folderId` ON `${TABLE_NAME}` (`folderId`)"
          },
          {
            "name": "index_chats_updatedAt",
            "unique": false,
            "columnNames": [
              "updatedAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chats_updatedAt` ON `${TABLE_NAME}` (`updatedAt`)"
          },
          {
            "name": "index_chats_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chats_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_chats_folderId_updatedAt",
            "unique": false,
            "columnNames": [
              "folderId",
              "updatedAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_chats_folderId_updatedAt` ON `${TABLE_NAME}` (`folderId`, `updatedAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "folders",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "folderId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "messages",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `chatId` INTEGER NOT NULL, `role` TEXT NOT NULL, `contentMarkdown` TEXT NOT NULL, `tokens` INTEGER NOT NULL, `ttfsMs` INTEGER NOT NULL, `tps` REAL NOT NULL, `contextUsedPct` REAL NOT NULL, `createdAt` INTEGER NOT NULL, `metaJson` TEXT NOT NULL, FOREIGN KEY(`chatId`) REFERENCES `chats`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "chatId",
            "columnName": "chatId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contentMarkdown",
            "columnName": "contentMarkdown",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tokens",
            "columnName": "tokens",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ttfsMs",
            "columnName": "ttfsMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tps",
            "columnName": "tps",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "contextUsedPct",
            "columnName": "contextUsedPct",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "metaJson",
            "columnName": "metaJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_messages_chatId",
            "unique": false,
            "columnNames": [
              "chatId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_chatId` ON `${TABLE_NAME}` (`chatId`)"
          },
          {
            "name": "index_messages_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_messages_role",
            "unique": false,
            "columnNames": [
              "role"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_role` ON `${TABLE_NAME}` (`role`)"
          },
          {
            "name": "index_messages_chatId_createdAt",
            "unique": false,
            "columnNames": [
              "chatId",
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_messages_chatId_createdAt` ON `${TABLE_NAME}` (`chatId`, `createdAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "chats",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chatId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "documents",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `uri` TEXT NOT NULL, `title` TEXT NOT NULL, `hash` TEXT NOT NULL, `mime` TEXT NOT NULL, `textBytes` BLOB NOT NULL, `createdAt` INTEGER NOT NULL, `metaJson` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "uri",
            "columnName": "uri",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hash",
            "columnName": "hash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mime",
            "columnName": "mime",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "textBytes",
            "columnName": "textBytes",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "metaJson",
            "columnName": "metaJson",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_documents_hash",
            "unique": true,
            "columnNames": [
              "hash"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_documents_hash` ON `${TABLE_NAME}` (`hash`)"
          },
          {
            "name": "index_documents_mime",
            "unique": false,
            "columnNames": [
              "mime"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_documents_mime` ON `${TABLE_NAME}` (`mime`)"
          },
          {
            "name": "index_documents_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_documents_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_documents_mime_createdAt",
            "unique": false,
            "columnNames": [
              "mime",
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_documents_mime_createdAt` ON `${TABLE_NAME}` (`mime`, `createdAt`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "embeddings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `docId` INTEGER, `chatId` INTEGER, `textHash` TEXT NOT NULL, `vector` BLOB NOT NULL, `dim` INTEGER NOT NULL, `norm` REAL NOT NULL, `createdAt` INTEGER NOT NULL, FOREIGN KEY(`docId`) REFERENCES `documents`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`chatId`) REFERENCES `chats`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "docId",
            "columnName": "docId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chatId",
            "columnName": "chatId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "textHash",
            "columnName": "textHash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "vector",
            "columnName": "vector",
            "affinity": "BLOB",
            "notNull": true
          },
          {
            "fieldPath": "dim",
            "columnName": "dim",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "norm",
            "columnName": "norm",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_embeddings_docId",
            "unique": false,
            "columnNames": [
              "docId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_embeddings_docId` ON `${TABLE_NAME}` (`docId`)"
          },
          {
            "name": "index_embeddings_chatId",
            "unique": false,
            "columnNames": [
              "chatId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_embeddings_chatId` ON `${TABLE_NAME}` (`chatId`)"
          },
          {
            "name": "index_embeddings_textHash",
            "unique": false,
            "columnNames": [
              "textHash"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_embeddings_textHash` ON `${TABLE_NAME}` (`textHash`)"
          },
          {
            "name": "index_embeddings_createdAt",
            "unique": false,
            "columnNames": [
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_embeddings_createdAt` ON `${TABLE_NAME}` (`createdAt`)"
          },
          {
            "name": "index_embeddings_docId_createdAt",
            "unique": false,
            "columnNames": [
              "docId",
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_embeddings_docId_createdAt` ON `${TABLE_NAME}` (`docId`, `createdAt`)"
          },
          {
            "name": "index_embeddings_chatId_createdAt",
            "unique": false,
            "columnNames": [
              "chatId",
              "createdAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_embeddings_chatId_createdAt` ON `${TABLE_NAME}` (`chatId`, `createdAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "documents",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "docId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "chats",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "chatId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "rag_chunks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `docId` INTEGER NOT NULL, `start` INTEGER NOT NULL, `end` INTEGER NOT NULL, `text` TEXT NOT NULL, `tokenCount` INTEGER NOT NULL, `embeddingId` INTEGER, FOREIGN KEY(`docId`) REFERENCES `documents`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`embeddingId`) REFERENCES `embeddings`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "docId",
            "columnName": "docId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "start",
            "columnName": "start",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "end",
            "columnName": "end",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tokenCount",
            "columnName": "tokenCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "embeddingId",
            "columnName": "embeddingId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_rag_chunks_docId",
            "unique": false,
            "columnNames": [
              "docId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rag_chunks_docId` ON `${TABLE_NAME}` (`docId`)"
          },
          {
            "name": "index_rag_chunks_embeddingId",
            "unique": false,
            "columnNames": [
              "embeddingId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rag_chunks_embeddingId` ON `${TABLE_NAME}` (`embeddingId`)"
          },
          {
            "name": "index_rag_chunks_tokenCount",
            "unique": false,
            "columnNames": [
              "tokenCount"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rag_chunks_tokenCount` ON `${TABLE_NAME}` (`tokenCount`)"
          },
          {
            "name": "index_rag_chunks_docId_start",
            "unique": false,
            "columnNames": [
              "docId",
              "start"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rag_chunks_docId_start` ON `${TABLE_NAME}` (`docId`, `start`)"
          },
          {
            "name": "index_rag_chunks_docId_tokenCount",
            "unique": false,
            "columnNames": [
              "docId",
              "tokenCount"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rag_chunks_docId_tokenCount` ON `${TABLE_NAME}` (`docId`, `tokenCount`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "documents",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "docId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "embeddings",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "embeddingId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "messages",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_messages_fts_BEFORE_UPDATE BEFORE UPDATE ON `messages` BEGIN DELETE FROM `messages_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_messages_fts_BEFORE_DELETE BEFORE DELETE ON `messages` BEGIN DELETE FROM `messages_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_messages_fts_AFTER_UPDATE AFTER UPDATE ON `messages` BEGIN INSERT INTO `messages_fts`(`docid`, `contentMarkdown`) VALUES (NEW.`rowid`, NEW.`contentMarkdown`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_messages_fts_AFTER_INSERT AFTER INSERT ON `messages` BEGIN INSERT INTO `messages_fts`(`docid`, `contentMarkdown`) VALUES (NEW.`rowid`, NEW.`contentMarkdown`); END"
        ],
        "tableName": "messages_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`contentMarkdown` TEXT NOT NULL, content=`messages`)",
        "fields": [
          {
            "fieldPath": "contentMarkdown",
            "columnName": "contentMarkdown",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": []
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "rag_chunks",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_rag_chunks_fts_BEFORE_UPDATE BEFORE UPDATE ON `rag_chunks` BEGIN DELETE FROM `rag_chunks_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_rag_chunks_fts_BEFORE_DELETE BEFORE DELETE ON `rag_chunks` BEGIN DELETE FROM `rag_chunks_fts` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_rag_chunks_fts_AFTER_UPDATE AFTER UPDATE ON `rag_chunks` BEGIN INSERT INTO `rag_chunks_fts`(`docid`, `text`) VALUES (NEW.`rowid`, NEW.`text`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_rag_chunks_fts_AFTER_INSERT AFTER INSERT ON `rag_chunks` BEGIN INSERT INTO `rag_chunks_fts`(`docid`, `text`) VALUES (NEW.`rowid`, NEW.`text`); END"
        ],
        "tableName": "rag_chunks_fts",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`text` TEXT NOT NULL, content=`rag_chunks`)",
        "fields": [
          {
            "fieldPath": "text",
            "columnName": "text",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": []
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "model_manifests",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `filePath` TEXT NOT NULL, `family` TEXT NOT NULL, `sizeBytes` INTEGER NOT NULL, `checksumSha256` TEXT NOT NULL, `contextLength` INTEGER NOT NULL, `importedAt` INTEGER NOT NULL, `sourceUrl` TEXT, `metadataJson` TEXT NOT NULL, `isDefault` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "filePath",
            "columnName": "filePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "family",
            "columnName": "family",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sizeBytes",
            "columnName": "sizeBytes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "checksumSha256",
            "columnName": "checksumSha256",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contextLength",
            "columnName": "contextLength",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "importedAt",
            "columnName": "importedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sourceUrl",
            "columnName": "sourceUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadataJson",
            "columnName": "metadataJson",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDefault",
            "columnName": "isDefault",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_model_manifests_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_model_manifests_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "benchmark_results",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `manifestId` INTEGER NOT NULL, `promptText` TEXT NOT NULL, `promptTokens` INTEGER NOT NULL, `generatedTokens` INTEGER NOT NULL, `ttftMs` INTEGER NOT NULL, `totalMs` INTEGER NOT NULL, `tps` REAL NOT NULL, `contextUsedPct` REAL NOT NULL, `prefillMs` INTEGER NOT NULL, `decodeMs` INTEGER NOT NULL, `memoryUsageMB` INTEGER NOT NULL, `gcCount` INTEGER NOT NULL, `threadCpuTimeNs` INTEGER NOT NULL, `gpuMode` INTEGER NOT NULL, `errorMessage` TEXT, `runAt` INTEGER NOT NULL, `deviceInfo` TEXT NOT NULL, FOREIGN KEY(`manifestId`) REFERENCES `model_manifests`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "manifestId",
            "columnName": "manifestId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "promptText",
            "columnName": "promptText",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "promptTokens",
            "columnName": "promptTokens",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "generatedTokens",
            "columnName": "generatedTokens",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ttftMs",
            "columnName": "ttftMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalMs",
            "columnName": "totalMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tps",
            "columnName": "tps",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "contextUsedPct",
            "columnName": "contextUsedPct",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "prefillMs",
            "columnName": "prefillMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "decodeMs",
            "columnName": "decodeMs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "memoryUsageMB",
            "columnName": "memoryUsageMB",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gcCount",
            "columnName": "gcCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "threadCpuTimeNs",
            "columnName": "threadCpuTimeNs",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gpuMode",
            "columnName": "gpuMode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorMessage",
            "columnName": "errorMessage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "runAt",
            "columnName": "runAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deviceInfo",
            "columnName": "deviceInfo",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_benchmark_results_manifestId",
            "unique": false,
            "columnNames": [
              "manifestId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_benchmark_results_manifestId` ON `${TABLE_NAME}` (`manifestId`)"
          },
          {
            "name": "index_benchmark_results_runAt",
            "unique": false,
            "columnNames": [
              "runAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_benchmark_results_runAt` ON `${TABLE_NAME}` (`runAt`)"
          },
          {
            "name": "index_benchmark_results_manifestId_runAt",
            "unique": false,
            "columnNames": [
              "manifestId",
              "runAt"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_benchmark_results_manifestId_runAt` ON `${TABLE_NAME}` (`manifestId`, `runAt`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "model_manifests",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "manifestId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'fc37927f2ffd975d9cd96dd465251b05')"
    ]
  }
}